@model IEnumerable<DatabaseModel.Models.Product>

@{
    ViewData["Title"] = "Ürünler";
}

<h1>Ürünler</h1>

<p>
    <a asp-action="Create">Yeni Ürün Ekle</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <select name="categoryId" class="form-control" asp-items="ViewBag.CategoryId">
                <option value="">Kategori</option>
            </select>
            <input type="submit" value="Filtrele" class="btn btn-secondary" />
        </p>
    </div>
</form>

<table class="table table-bordered"> @*TODO optionally display full name of perfumes*@
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortBy="@ViewBag.IdSort">@Html.DisplayName("Id")</a>
            </th>
            <th>
                @Html.DisplayName("Ürün")
            </th>
            <th>
                <a asp-action="Index" asp-route-sortBy="@ViewBag.StockSort">@Html.DisplayName("Stok")</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortBy="@ViewBag.SalesSort">@Html.DisplayName("Satış")</a>
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">@item.ProductId</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
                @if(item.Perfume != null)
                {
                        <text> | </text>
                        @Html.DisplayFor(modelItem => item.Perfume.Brand)
                        <text>&nbsp;</text>
                        @Html.DisplayFor(modelItem => item.Perfume.Type)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalSales)
            </td>
        </tr>
}
    </tbody>
</table>
