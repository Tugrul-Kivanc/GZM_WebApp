@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@model IPagedList<ListOrderViewModel>

@{
    ViewData["Title"] = "Satışlar";
}

<h1>Satışlar</h1>

<p>
    <a asp-action="Create">Satış Ekle</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="date" name="date" value="@ViewBag.SelectedDate.ToString("yyyy-MM-dd")" />
            <input type="hidden" name="page" value="1" />
            <input type="submit" value="Filtrele" class="btn btn-secondary" />
        </p>
    </div>
</form>

<p>@ViewBag.SelectedDate.ToString("dd.MM.yyyy")</p>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Ürünler")
            </th>
            <th>
                @Html.DisplayName("Adet")
            </th>
            <th>
                @Html.DisplayName("Ücret")
            </th>
            <th>
                @Html.DisplayName("Not")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @for(int i = 0; i < item.ProductNames.Count();i++)
                {
                    @item.ProductNames[i]
                    if (i != item.ProductNames.Count() - 1)
                    {
                        <text>, </text>
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fee)
                @Html.DisplayFor(modelItem => item.Payment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.OrderId">Düzenle</a>
            </td>
        </tr>
}
    </tbody>
</table>

<p>
@if (@ViewBag.Nakit > 0)
{
    
        <text>Nakit: @ViewBag.Nakit</text>
        <text>&emsp;</text>
}
@if (@ViewBag.Kart > 0)
{
        <text>Kart: @ViewBag.Kart</text>
        <text>&emsp;</text>
}
@if (@ViewBag.Havale > 0)
{
        <text>Havale: @ViewBag.Havale</text>
        <text>&emsp;</text>
}
</p>
<p>
    <text>Toplam: @ViewBag.Toplam</text>
</p>


<link rel="stylesheet" href="~/css/pagedlist.css" asp-append-version="true" runat="server" />
@Html.PagedListPager((IPagedList)Model,
                    page => Url.Action("Index", new {page}),
                    new PagedListRenderOptions(){DisplayLinkToFirstPage = PagedListDisplayMode.Always})